security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    access_denied_url: /login
    encoders:
        App\Entity\Participant:
            algorithm: auto

    providers:
        #users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Participant


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /


            logout:
                path: app_logout
                target: app_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_BANNI: IS_AUTHENTICATED_ANONYMOUSLY

    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/logout, roles: [ROLE_BANNI,ROLE_USER] }
         - { path: ^/, roles: ROLE_USER }



